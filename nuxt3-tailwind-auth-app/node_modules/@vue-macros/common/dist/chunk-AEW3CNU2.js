"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }// src/unplugin.ts


var _pluginutils = require('@rollup/pluginutils');

function getTransformResult(s, id) {
  if (_optionalChain([s, 'optionalAccess', _ => _.hasChanged, 'call', _2 => _2()])) {
    return {
      code: s.toString(),
      get map() {
        return s.generateMap({
          source: id,
          includeContent: true,
          hires: true
        });
      }
    };
  }
}
function createFilter(options) {
  return _pluginutils.createFilter.call(void 0, options.include, options.exclude);
}





exports.getTransformResult = getTransformResult; exports.createFilter = createFilter; exports.normalizePath = _pluginutils.normalizePath;
